import { MapType, MapConfig, Tile, CollidableEntity } from "../types";

export const TILE_SIZE = 64;

// Define cabin properties
const CABIN_SCALE = 4;
const CABIN_SPRITE = require("../assets/cabin.png");

// Create a function to generate collidable entities
const createCollidableEntities = (): CollidableEntity[] => {
  return [
    {
      type: "cabin",
      position: { row: 14, col: 12 }, // Placing cabin in a clear area
      sprite: CABIN_SPRITE,
      scale: CABIN_SCALE,
      collision: {
        width: 1, // Base collision size (will be scaled)
        height: 1, // Base collision size (will be scaled)
      },
    },
  ];
};

export const DEFAULT_MAPS: MapConfig = {
  [MapType.FOREST]: {
    name: "Forest Path",
    initialPosition: {
      x: -800.0,
      y: -184.0,
    },
    mapData: [
      [3.2, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 0, 0, 0, 3, 3, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3],
      [3.2, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3.2, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 0, 0, 0, 3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3.2, 3, 3],
      [3, 3, 3.2, 3, 0, 0, 0, 3.2, 3, 3.2, 3, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3.2, 3],
      [3.2, 3, 3, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3, 3],
      [3, 3.2, 0, 0, 0, 3.2, 3, 3, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3, 3],
      [3.2, 3, 0, 0, 3.2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3, 3],
      [3, 3.2, 0, 3.2, 3, 3, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2, 3],
      [3.2, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2],
      [3, 3.2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3],
      [3.2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3],
      [3, 3.2, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3],
      [3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3.2],
      [3, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3],
      [3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3.2],
      [3, 3.2, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3],
      [3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3.2],
      [3, 3.2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3],
      [3.2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3.2],
      [3.2, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3.2, 3],
      [3.2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3.2, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3, 3.2, 3, 3],
      [3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 0, 0, 0, 0, 0, 0, 3.2, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 3],
      [3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 0, 0, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
      [3, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 3],
      [3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3.2, 3, 3, 3.2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ],
    collidableEntities: createCollidableEntities(),
  },
  [MapType.MOUNTAIN_PASS]: {
    name: "Mountain Pass",
    mapData: [
      [0, 0, 0, 0, 0, 0, 2, 2, 2, 2],
      [0, 0, 0, 3, 3, 0, 0, 2, 2, 2],
      [0, 0, 3, 3, 3, 3, 0, 0, 2, 2],
      [0, 0, 0, 3, 4, 4, 4, 0, 0, 0],
      [0, 0, 0, 0, 4, 0, 4, 0, 0, 0],
      [2, 0, 0, 0, 4, 4, 4, 0, 0, 0],
      [2, 2, 0, 0, 0, 0, 0, 0, 0, 0],
    ],
  },
};
